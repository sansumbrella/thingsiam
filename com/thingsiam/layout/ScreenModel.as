package com.thingsiam.layout {	import flash.display.Stage;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.geom.Rectangle;		public class ScreenModel extends EventDispatcher {		private var _stage:Stage;		public var	left:Number;		public var	right:Number;		public var	top:Number;		public var	bottom:Number;		public var	centerX:Number;		public var	centerY:Number;		public var	width:Number;		public var	height:Number;							private var _rectangle:Rectangle;		private static var _instance:ScreenModel;				public function ScreenModel( l:Lock ) {			setDefaults();		}				public static function get instance():ScreenModel		{			if( !_instance ) _instance = new ScreenModel(new Lock);			return _instance;		}				public function init( appStage:Stage, w:Number = 1024, h:Number = 768):void		{			_stage = appStage;			_stage.scaleMode = StageScaleMode.NO_SCALE;			_stage.align = StageAlign.TOP_LEFT;			_stage.addEventListener( Event.RESIZE, onResize );						setDimensions(w, h);			forceResize();		}				public function setDimensions( w:Number, h:Number ):void		{			_rectangle.width = w;			_rectangle.height = h;			width = w;			height =h;		}				public function forceResize():void{			onResize(null);		}				public function get rectangle():Rectangle		{			return _rectangle.clone();		}				public function get stage():Stage{			return _stage;		}				private function setDefaults():void {			left = 0;			right = 1024;			top = 0;			bottom = 768;			width = right - left;			height = bottom - top;			centerX = width/2;			centerY = height/2;						_rectangle = new Rectangle(left, top, width, height);		}		private function onResize( event:Event ):void{			if( _stage.stageWidth != 0 && _stage.stageHeight != 0 )			{				left = 0;//( startWidth - theStage.stageWidth )/2				right = _stage.stageWidth; //( startWidth + theStage.stageWidth )/2;				top = 0; //( startHeight - theStage.stageHeight )/2;				bottom = _stage.stageHeight;//( startHeight + theStage.stageHeight )/2;				width = right - left;				height = bottom - top;				centerX = width/2;				centerY = height/2;								_rectangle.x = left;				_rectangle.y = top;				_rectangle.width = width;				_rectangle.height = height;				dispatchEvent( new Event( Event.CHANGE ) );			}		}			}}class Lock{}